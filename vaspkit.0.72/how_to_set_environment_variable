# cp how_to_set_environment_variable ~/.vaspkit and modify the ~/.vaspkit file based on your settings!    
VASP5                    .TRUE.             # .TRUE. or .FALSE.; Set .FALSE. if you are using vasp.4.x 
GGA_PATH                 ~/POTCAR/GGA       #  Path of GGA potential.
PBE_PATH                 ~/POTCAR/PBE       #  Path of PBE potential. 
LDA_PATH                 ~/POTCAR/LDA       #  Path of LDA potential.                  
POTCAR_TYPE               PBE               #  PBE, GGA or LDA; Set PBE if you want to make PBE-POTCAR file   
GW_POTCAR                .FALSE.            # .TRUE. or .FALSE.; For example, H_GW, O_GW will be chose when POTCAR_GW = .TRUE.  
RECOMMENDED_POTCAR       .TRUE.             # .TRUE. or .FALSE.; The recommended PAW potential will be chose when RECOMMENDED_POTCAR = .TRUE.
SET_FERMI_ENERGY_ZERO    .TRUE.             # .TRUE. or .FALSE.; The Fermi Energy will be set to zero eV when SET_FERMI_ENERGY_ZERO = .TRUE.
MINI_INCAR               .FALSE.            # .TRUE. or .FALSE.; A simplified INCAR will be written when MINI_INCAR = .TRUE.    
SET_INCAR_WRITE_MODE      OVERRIDE          #  OVERRIDE, APPEND, BACK-UP-OLD,BACK-UP-NEW;  "Customize INCAR File"  whether to override existing INCAR/appending existing INCAR/backup existing INCAR to INCAR.old && write into INCAR/write into INCAR.new
PYTHON_VERSION            2                 #  Python version is 2. SET it 3 if your python environment is python3
PLOT_MATPLOTLIB          .FALSE.            #  Set it .TRUE. if you want to generate Graphs. (Matplotlib and Numpy packages MUST be embedded in Python) 
ADVANCED_USER            .TRUE.             #  VASPKIT0.72 has opened the user interface. Please fill in your settings in the block 'USER_DEFINED' if you want vaspkit to integrate your own scripts in the 'UTILITIES' file. 
VASPKIT_UTILITIES_PATH   ~                  #  IF ADVANCED_USER is .TRUE., set VASPKIT_UTILITIES_PATH like ~/vaspkit.0.72/utilities in order to use scripts in it. 


#USER_DEFINED
#Synopsis:The first parameter is the command-id,starting with 'u'; the second is the interpreter, like 'python/bash/perl'(Please left it blank if you are using an executive binary); the third is the name of a script or an executive binary; the fourth one is a switch, if any extra argv is needed, please set if .TRUE. ; the last on is the description, MUST use '_' as delimiter.     
#           id      interpreter      script          argv       description  
#Example1  'u1        python      get_entropy.py    .TRUE.      get_entropy'
#Example2  'u2                      hello.exe       .FALSE.     ls         '

u1        python      get_entropy.py    .TRUE.      get_entropy_for_adsorbate
u2        python      bader2pqr.py      .FALSE.     bader2pqr
#END_USER_DEFINED 
